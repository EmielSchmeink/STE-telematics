Version (major / minor):;2;35;;;;;;;;;;;;
ID;Name;DataNames;DataTypes;DataUnits;Standard Values;Log;PutToCAN1;PutToCAN2;Description;Sender;Receiver;ToStrat;ToVis;NotToDB;Convert endianness;
1;LVC_VehicleState;lvcState, state, error;LVCState, VehicleState, LVCError;lvcState, state, error;;1;1;1;The state of the vehicle;LVC;BMS, BoC;;2;;1;
10;BMS_State;mainState, imdState, coolingLimitState, coolingControlState, battfrontState, canControllerState, error, _dummy;BMSState, IMDState, BMSCoolingLimit, OnOff, OnOff, OnOff, BMSError, bool;BMS state, IMD state, Cooling limit state, on/off, on/off, on/off, error, dontcare;;1;1;1;Main states of the BMS state machine;BMS;;;;;1;
11;BMS_IMDStatus;insulationValue, frequencyHz, state;uint32_t, uint16_t, IMDMeasurement;kOhm, Hz, state;;1;1;1;Current IMD state,  IMD operating frequency,  IMD measured insulation according to bender datasheet;BMS;MK5;;;;1;
12;BMS_MinMaxCellVoltage;minCellVoltage, maxCellVoltage, minCellNumber, maxCellNumber, maxNonAdjacentBalancedCellVoltage;uint16_t, uint16_t, uint8_t, uint8_t, uint16_t;mV, mV, -, -, mV;;1;1;1;Minimal & Maximal  Battery MetaCell Voltages  including cell identification Identification starts from 0 on top battery layer, from 100 on middle battery layer and 200 on bottom battery layer ;BMS;FUC;;0, 1;;1;
13;BMS_MinMaxCellTemp;minCellTemperature, maxCellTemperature, minNTCNumber, maxNTCNumber;int16_t, int16_t, uint8_t, uint8_t;c°C, c°C, -, -;;1;1;1;Minimal & Maximal  Battery MetaCell Temperatures  including cell identification Identification starts from 0 on top battery layer, from 100 on middle battery layer and 200 on bottom battery layer ;BMS;FUC;;0, 1;;1;
20;ACU_DNR;dnr;DNR;DNR;;1;1;1;Current DNR state of the ACU;ACU;FUC;;;;1;
21;ACU_OperationMode;mode;OperationMode;Operation mode;;1;1;1;Current operation mode of the ACU;ACU;FUC;;;;1;
22;ACU_MotorControlState;mode, hillAssistActive, leftInverterAlive, rightInverterAlive, leftInverterError, rightInverterError, throttlePedalOK, brakePedalOK, leftInvInternalOverTemperature, leftInvMotorOverTemperature, leftInvOvercurrent, leftInvUndercurrent, leftInvOvervoltage, leftInvUndervoltage, rightInvInternalOverTemperature, rightInvMotorOverTemperature, rightInvOvercurrent, rightInvUndercurrent, rightInvOvervoltage, rightInvUndervoltage, leftInverterStatus, rightInverterStatus;MotorControlMode, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, InverterStatus, InverterStatus;mode, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, status, status;;1;1;1;Contains the motor control state of the ACU;ACU;;;2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19;;1;
23;ACU_CruiseControl;setpoint, state;float, ControlState;m/s, state;;1;1;1;Contains the current state of the cruise control;ACU;SSB;;;;1;
24;ACU_PedalFaults;throttlePedalsDifferent, throttle1AOB, throttle2AOB, brakePedalsDifferent, brake1AOB, brake2AOB;bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1;T/F, T/F, T/F, T/F, T/F, T/F;;1;1;1;Contains any faults in the pedal measurements;ACU;FUC;;;;1;
25;ACU_Lights;brakeLight, reverseLight;bool: 1, bool: 1;T/F, T/F;;1;1;1;Contains whether the lights controlled by the ACU should be enabled;ACU;RAUX;;;;1;
26;ACU_Velocity;velocity;float;m/s;;1;1;1;Contains the current velocity according to the ACU;ACU;FUC;0;0;;1;
30;PvC_Output;voltage, current;float, float;V, A;;1;1;1;Voltage and current output of the PvC;PvC;ChC, BoC;;0, 1;;1;
60;SSB_Lights;lights, fogLight, leftIndicator, rightIndicator;LightingState, bool: 1, bool: 1, bool: 1;State, On/Off, On/Off, On/Off;;1;1;1;Current lighting state according to the SSB;SSB;FUC, RAUX;;;;1;
61;SSB_PedallessRegen;amount, enable;float, bool;-, T/F;;1;1;1;Allows for regenerative braking through input on the steering wheel;SSB;ACU;;;;1;
62;SSB_HumanInput;humanInput;bool;T/F;;1;1;1;Whether a hand is present on the steering wheel;SSB;ACU;;;;1;
70;BB_ActuationState;enable;bool;T/F;;1;1;1;Whether the Blue box wants actuation control to be enabled;BB;ACU;;;;1;
71;BB_SetPoint;steeringAngle, velocity, acceleration, reverse;int16_t, int16_t, int16_t, bool;deg, mm/s, mm/s^2, T/F;;1;1;1;Target kinematic setpoint for the actuators;BB;ACU;;;;1;
75;AVC_Faults;disabledByTemperature, disabledByInputVoltage, disabledByOutputVoltage, disabledByOutputCurrent, disabledByKillswitch;bool: 1, bool: 1, bool: 1, bool: 1, bool: 1;T/F, T/F, T/F, T/F, T/F;;1;1;1;Whether any faults occurred during normal operation of the AVC;AVC;;;;;1;
101;LVC_InterlockOK;imdOk, hvilOk;bool, bool;T/F, T/F;;1;1;1;Indicates the IMD OK and HVIL OK signals.;LVC;;;;;1;
102;LVC_EmergencyState;inEmergencyState;bool;T/F;;1;1;1;Whether or not the car is in emergency state. Which is the case if any of the emergency buttons is pressed.;LVC;;;0;;1;
103;LVC_AOPSUPower;current, voltage;uint16_t, uint16_t;mV, mA;;1;1;1;Current drawn from the standby AOPSU. Voltage created by the AOPSU;LVC;;;;;1;
104;LVC_LVPower;current, voltage;uint16_t, uint16_t;mV, mA;;1;1;1;Indicates the current flow after the LV converters, measured by the LV_CUR_ADC. Voltage after the LV converters, measured by LV_V_ADC;LVC;;;0, 1;;1;
105;LVC_BMSHVOk;bmsHVOK;bool;T/F;;1;1;1;Indicates whether or not the BMS HV OK signal is high.;LVC;;;0;;1;
106;LVC_HVUnderVoltage;HVInBoundaries;bool;T/F;;1;1;1;Indicates whether or not the HV voltage is within safe operating boundaries.;LVC;;;;;1;
107;LVC_StandbyPSUConnected;psuConnected;bool;T/F;;1;1;1;Indicates whether the Standby PSU is connected to the LVC and is within normal operation bounds.;LVC;;;;;1;
108;LVC_NTC1;temp;int16_t;ddegC;;1;1;1;Temperature measured by NTC1 in dC;LVC;;;;;1;
109;LVC_NTC2;temp;int16_t;ddegC;;1;1;1;Temperature measured by NTC2 in dC;LVC;;;;;1;
110;LVC_NTC3;temp;int16_t;ddegC;;1;1;1;Temperature measured by NTC3 in dC;LVC;;;;;1;
111;LVC_NTC4;temp;int16_t;ddegC;;1;1;1;Temperature measured by NTC4 in dC;LVC;;;;;1;
112;LVC_ConvCount;convsEnabled;uint8_t;-;;1;1;1;Emits the number of converters currently turned on. Should not be used for timing of the converter count changes. That can be obtained from the LVStatus message.;LVC;;;;;1;
113;LVC_TimeoutSensor;ignoreMe;bool;T/F;;1;1;1;Used to wake an actuator that has to act based on a timeout.;LVC;;;;;1;
114;LVC_KeyStatus;keyStatus;KeyStatus;Key status;;1;1;1;Indicates the position of the key;LVC;;;;;1;
115;LVC_Version;controller_major_version, controller_minor_version, eslib_major_version, eslib_minor_version, csv2cpp_major_version, csv2cpp_minor_version;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;-, -, -, -, -, -;;1;1;1;For logging/debugging;LVC;;;;;1;
116;LVC_EnableBMSCooling;enable;bool;T/F;;1;1;1;Contains whether the BMS should enable cooling due to the LVC registering a temperature which is too high;LVC;BMS;;;;1;
199;LVC_EnableLVCFan;enableFan;bool;T/F;;1;1;1;This message can be used to enable the LVC Fan manually. It could be send from the strategy van to enable the Fan in dire situations to prevent disaster.;LVC;;;;;1;
129;SAC_EMCY;errorCode, errorRegister, vendorData1, vendorData2;uint16_t, uint8_t, uint8_t, uint32_t;-, -, -, -;;1;1;1;CANOpen EMCY object for the steering actuator;SAC;ACU;;;;0;
130;BAC_EMCY;errorCode, errorRegister, vendorData1, vendorData2;uint16_t, uint8_t, uint8_t, uint32_t;-, -, -, -;;1;1;1;CANOpen EMCY object for the braking actuator;BAC;ACU;;;;0;
200;BMS_SubStates;essSubState, satStartupState, ivtStartupState, balancingState, cellOvervoltageState, uvRecoveryState;BMSESSSubState, SatelliteStartupState, IVTStartupState, BMSBalancingState, CellOvervoltageLimit, UVRecoveryState;ESS substate, satellite startup state, IVT startup state, balancing state, cell overvoltage state, undervoltage recovery state;;1;1;1;Sub-states of the BMS state machine;BMS;;;;;1;
201;BMS_Inputs;estop, hvilOk, hvilMid, imdOk, ivtOCS, satFaultInt, hvAuxNeg, hvAuxPos, hvContNegMeas, hvContPosMeas, lvcWake;bool:1, bool:1, bool:1, bool:1, bool:1, bool:1, bool:1, bool:1, bool:1, bool:1, bool:1;high/low, high/low, high/low, high/low, high/low, high/low, high/low, high/low, high/low, high/low, high/low;;1;1;1;Input measurements by the BMS state machine;BMS;;;0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10;;1;
202;BMS_OverridesAndContactors;hvilOverridden, imdOverridden, ivtOCSOverridden, enableNeg, enablePos, dischargeOff;bool, bool, bool, bool, bool, bool;T/F, T/F, T/F, T/F, T/F, T/F;;1;1;1;Whether the overrides of the BMS are active and whether contactors are enabled;BMS;;;;;1;
203;BMS_ContinuousCharging;maxChargingCurrent, chargingAllowed, cellOverVoltageLimited, overTemperatureLimited;uint32_t, bool, bool:1, bool:1;mA, T/F, T/F, T/F;;1;1;1;Whether continuous charging is allowed, at which current, and the reason why it isn't allowed if it isn't;BMS;ChC, PvC;;;;1;
204;BMS_PeakPower;allowPeakCharging, allowPeakDischarging;bool, bool;T/F, T/F;;1;1;1;Whether regenerative braking and high motor power current is allowed;BMS;ACU;;;;1;
205;BMS_Current;current;float;A;;1;1;1;Battery current as given by the IVT;BMS;ChC, PvC;;0;;1;
207;BMS_BatteryPower;power;float;W;;1;1;1;Battery power usage;BMS;MK5;;0;;1;
208;BMS_SatInterfaceState;state, error, nSats, satTimeoutCounter, satOK, undervoltage, overvoltage, auxUndervoltage, auxOvervoltage, comparatorUndervoltage, comparatorOvervoltage, communicationFault, systemFault, chipFault, gpiFault;BMSSatState, BMSSatError, uint8_t, uint8_t, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1;state, error, -, -, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F;;1;1;1;State of the BMS sat board interface;BMS;;;0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14;;1;
209;BMS_SatBalancingState;sat1VoltageComparison, sat2VoltageComparison, sat3VoltageComparison;uint16_t, uint16_t, uint16_t;bit array, bit array, bit array;;1;1;1;Balancing status of the BMS satellite boards containin the voltage comparisons;BMS;;;;;1;
210;BMS_SatInterfaceControl;activate, enableRecoveryUVThreshold;bool: 1, bool: 1;T/F, T/F;;1;1;1;Control parameters for the BMS sat interface;BMS;;;;;1;
211;BMS_SatBalancingControl;sat1BalancingChannels, sat2BalancingChannels, sat3BalancingChannels, balancingThresholdVoltage;uint16_t, uint16_t, uint16_t, uint16_t;bit array, bit array, bit array, mV;;1;1;1;Control parameters for the BMS sat interface related to balancing;BMS;;;;;1;
212;BMS_SoCSoH;soc, soh;float, float;%, %;;1;1;1;Battery State of Charge per %,  Battery State of Health per %;BMS;FUC, BoC;0;0;;1;
213;BMS_SatPCBTemperatures;sat1pcbTemperature, sat2pcbTemperature, sat3pcbTemperature;int16_t, int16_t, int16_t;c°C, c°C, c°C;;1;1;1;Sat Board PCB Temperatures, used to discover hot pcb for instance when balancing;BMS;;;;;1;
214;BMS_SatPCBVoltages;sat1pcbVoltage, sat2pcbVoltage, sat3pcbVoltage;uint16_t, uint16_t, uint16_t;mV, mV, mV;;1;1;1;Sat Board PCB Voltage, used to know which stack voltage is highest and lowest;BMS;;;;;1;
215;BMS_Version;swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;#, #, #, #, #, #;;1;1;1;BMS version message;BMS;;;;;1;
216;BMS_PCBTemperatures;ntc1, ntc2, ntc3;int16_t, int16_t, int16_t;c°C, c°C, c°C;;1;1;1;PCB temperatures measured by the NTC's on the BMS;BMS;;;;;1;
217;BMS_HVMeasurements;batteryVoltage, busVoltage;float, float;V, V;;1;1;1;Voltage measurements of the battery and the bus as received from the IVT;BMS;;;0, 1;;1;
218;BMS_IVTOCSettings;state, chargingLimit, dischargingLimit;IVTLimitState, IVTChargingLimitSetting, IVTDischargingLimitSetting;state, state, state;;1;1;1;Settings of the IVT current thresholds;BMS;;;;;1;
219;BMS_ContactorHistory;ocs_timer, prerelay, pos, neg;uint32_t, bool:1, bool:1, bool:1;us, T/F, T/F, T/F;;1;1;1;Contactor history on the BMS;BMS;;;;;1;
220;BMS_IVTDebugging;rdErrorCount, tdErrorCount;uint8_t, uint8_t;-, -;;1;1;1;Debugging data for the IVT issue on the BMS;BMS;;;;;1;
221;BMS_CoulombCounter;counter;int64_t;As;;1;1;1;Coulomb counter of the BMS;BMS;;;0;;1;
222;BMS_WhCounter;counter;int64_t;Wh;;1;1;1;Cumulative Wh counter of the BMS;BMS;;;0;;1;
231;BMS_ResetCoulombCounter;counter;int64_t;As;;1;1;1;Reset value for the coulomb counter of the BMS, can only be written while in ESS;BMS Servicing;BMS;;;;1;
232;BMS_ResetWhCounter;counter;int64_t;As;;1;1;1;Reset value for the Wh counter of theBMS, can only be written while in ESS;BMS Servicing;BMS;;;;1;
300;ACU_Version;swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;#, #, #, #, #, #;;1;1;1;ACU version message;ACU;;;;;1;
301;ACU_Keepalive;mode, bmsAlive, ssbAlive, srvRegenAlive, esbAlive, inverter;ACUMode, bool: 1, bool: 1, bool: 1, bool: 1, InverterType;Mode, T/F, T/F, T/F, T/F, Inverter type;;1;1;1;Keepalive and mode of the ACU;ACU;;;;;1;
302;ACU_Regenerative;amount, enabled;float, bool : 1;0-1, T/F;;1;1;1;Whether regenerative braking is enabled or not and the amount with which there is currently being braked regeneratively;ACU;BoC;;;;1;
303;ACU_Pedals;throttle, brake;float, float;-, -;;1;1;1;Fused pedal measurements;ACU;;;0, 1;;1;
304;ACU_PedalRegenerative;pedalRegenAmount;float;0-1;;1;1;1;Amount of regenerative braking according to the pedal;ACU;;;;;1;
305;ACU_ThrottlePedal;sensor1, sensor2;float, float;-, -;;1;1;1;Measurement of both throttle pedal sensors;ACU;;;;;1;
306;ACU_BrakePedal;sensor1, sensor2;float, float;-, -;;1;1;1;Measurement of both brake pedal sensors;ACU;;;;;1;
307;ACU_BrakingSystemStatus;pressure, brakingSystemOK, handbrakeActive;float, bool: 1, bool: 1;?, T/F, T/F;;1;1;1;Pressure measured in the braking system, and whether the system is OK;ACU;FUC, BoC;;;;1;
320;ACU_MotorPower;left, right;float, float;W, W;;1;1;1;Power measurement of both motors;ACU;;;0, 1;;1;
321;ACU_MotorTemperature;left, right;float, float;deg C, deg C;;1;1;1;Temperature measurement of both motors;ACU;;;0, 1;;1;
322;ACU_InverterTemperature;left, right;float, float;deg C, deg C;;1;1;1;Temperature measurement of both inverters;ACU;;;0, 1;;1;
323;ACU_InverterLimitFlags;leftMotorDerated, leftInverterDerated, leftMotorTempLimit, leftInverterTempLimit, leftCurrentLimit, pad1, rightMotorDerated, rightInverterDerated, rightMotorTempLimit, rightInverterTempLimit, rightCurrentLimit, pad2;bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, uint16_t, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, uint16_t;b, b, b, b, b, p, b, b, b, b, b, p;;1;1;1;Limit flags of the inverters;ACU;;;;;1;
330;ACU_VelocitySetpoint;setpoint;float;m/s;;1;1;1;Current setpoint used for longitudinal motion control on the ACU;ACU;;;;;1;
331;ACU_CCControllerState;error, integrator;float, float;m/s, m;;1;1;1;Current state of the PI Cruise Control feedback controller;ACU;;;;;1;
332;ACU_CCControllerParams;kp, ki;float, float;-, -;;1;1;1;Cruise Control PI feedback controller tuning parameters;ACU;;;;;1;
340;ACU_DSSStatus;state, killswitchActive;ControlState, bool: 1;control state, T/F;;1;1;1;Control state for DSS on the ACU;ACU;BB, AVC;;;;1;
341;ACU_DSSPrecheckErrors;nErrs, error1, error2, error3, error4, error5, error6, error7;uint8_t, DSSPrecheckError, DSSPrecheckError, DSSPrecheckError, DSSPrecheckError, DSSPrecheckError, DSSPrecheckError, DSSPrecheckError;n, error, error, error, error, error, error, error;;1;1;1;Errors that occurred during DSS precheck;ACU;BB;;;;1;
342;ACU_DSSActuationErrors;nErrs, error1, error2, error3, error4, error5, error6, error7;uint8_t, DSSActuationError, DSSActuationError, DSSActuationError, DSSActuationError, DSSActuationError, DSSActuationError, DSSActuationError;n, error, error, error, error, error, error, error;;1;1;1;Errors that occurred during DSS actuation;ACU;BB;;;;1;
343;ACU_CANOpenInterfaceControl;enable;bool;T/F;;1;1;1;Control message for the ACU CANopen interface;ACU;;;;;1;
344;ACU_CANOpenInterfaceState;state;CANOpenInterfaceState;state;;1;1;1;Current state of the ACU CANopen interface;ACU;;;;;1;
345;ACU_SACState;nodeState, interfaceState;CANOpenNodeState, CANOpenInterfaceDeviceState;state, state;;1;1;1;State of the steering actuator CANopen node;ACU;;;;;1;
346;ACU_BACState;nodeState, interfaceState;CANOpenNodeState, CANOpenInterfaceDeviceState;state, state;;1;1;1;State of the steering actuator CANopen node;ACU;;;;;1;
347;ACU_DSSActuation;state, error, startingState, enableInverters, inverterSetpoint;DSSActuationState, DSSControllerError, DSSControllerStartingStage, bool, float;state, error, stage, T/F, 0-1;;1;1;1;State of the DSS control component and setpoint of the DSS component to the inverters;ACU;;;;;1;
348;ACU_EnableDSSVoltage;enable;bool;T/F;;1;1;1;Indication from the ACU to the LVC on whether the DSS actuator voltage should be enabled;ACU;LVC;;;;1;
349;ACU_PlanarAcceleration;x, y;float, float;m/s^2, m/s^2;;1;1;1;X and Y components of the acceleration vector measured by the ACU;ACU;;;0;;1;
350;ACU_BrakingPrecheck;state;BrakingPrecheckState;state;;1;1;1;Braking precheck state;ACU;BB;;;;1;
351;ACU_BrakingPressure;sensor1, sensor2;float, float;?, ?;;1;1;1;Pressure measured by the redundant braking sensors;ACU;;;;;1;
352;ACU_BrakingFluidLevel;sensor1, sensor2;bool: 1, bool: 1;T/F, T/F;;1;1;1;Values measured by the braking fluid level sensors;ACU;;;;;1;
353;ACU_BrakingSystemFaults;pressureSensorsDifferent, pressureSensor1OOB, pressureSensor2OOB, underpressure, levelSensorsDifferent, underlevel;bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1;T/F, T/F, T/F, T/F, T/F, T/F;;1;1;1;Errors detected by the braking system monitor;ACU;;;;;1;
360;ACU_SteeringAngle;steeringAngle;float;degrees;;1;1;1;Steering angle as measured by the ACU;ACU;BB;;;;1;
370;ACU_DareCCSetpoint;setpoint;float;km/h;;1;1;1;Dare CC setpoint;ACU Dare setpoint;ACU;;;;1;
371;ACU_DareCCLeftController;error, integral;float, float;-, -;;1;1;1;Dare CC left controller state;ACU;;;;;1;
372;ACU_DareCCRightController;error, integral;float, float;-, -;;1;1;1;Dare CC right controller state;ACU;;;;;1;
373;ACU_DareCCInverterSetpoints;left, right;float, float;-, -;;1;1;1;Dare CC setpoints sent to the left and right inverters;ACU;;;;;1;
374;ACU_DareCCVelocities;left, right;float, float;-, -;;1;1;1;Velocities;ACU;;;;;1;
375;ACU_DareCCBusVoltages;left, right;float, float;V, V;;1;1;1;Voltages;ACU;;;;;1;
387;MPPT1_CurrentAndVoltageIn;currentIn, voltageIn;float, float;mA, V;;1;1;1;MPPT 1 current IN and voltage IN;MPPT1;PvC;;0, 1;;1;
388;MPPT2_CurrentAndVoltageIn;currentIn, voltageIn;float, float;mA, V;;1;1;1;MPPT 2 current IN and voltage IN;MPPT2;PvC;;0, 1;;1;
389;MPPT3_CurrentAndVoltageIn;currentIn, voltageIn;float, float;mA, V;;1;1;1;MPPT 3 current IN and voltage IN;MPPT3;PvC;;0, 1;;1;
400;PvC_Version;swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;#, #, #, #, #, #;;1;1;1;PvC version message;PvC;;;;;1;
401;PvC_Keepalive;bmsAlive;bool: 1;T/F;;1;1;1;Keepalive of the PvC;PvC;;;;;1;
402;PvC_SolarChargingState;state, error;SolarChargingState, SolarChargingError;state, error;;1;1;1;State of the solar charging system;PvC;FUC;;1;;1;
403;PvC_MPPTState;mppt1, mppt2, mppt3;MPPTState, MPPTState, MPPTState;state, state, state;;1;1;1;State of the MPPTs connected to the PvC;PvC;FUC;;;;1;
404;PvC_CurrentMeasurements;mppt1, mppt2, mppt3;int16_t, int16_t, int16_t;mA, mA, mA;;1;1;1;Current measurement per MPPT, with positive current being from MPPT to HV bus;PvC;;;0, 1, 2;;1;
405;PvC_MPPTCurrents;mppt1, mppt2, mppt3;int16_t, int16_t, int16_t;mA, mA, mA;;1;1;1;Current measurement per MPPT, with positive current being from MPPT to HV bus;PvC;;;0, 1, 2;;1;
406;PvC_MPPTTemperatures;mppt1, mppt2, mppt3;int16_t, int16_t, int16_t;cdegC, cdegC, cdegC;;1;1;1;PCB temperatures per MPPT;PvC;;;;;1;
500;ChC_Version;swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;#, #, #, #, #, #;;1;1;1;ChC version message;ChC;;;;;1;
501;ChC_Keepalive;bmsAlive, pvcAlive;bool: 1, bool: 1;T/F, T/F;;1;1;1;Keepalive of the ChC;ChC;;;;;1;
502;ChC_MainsState;state, error, relayClosed, relayStatus, mosfetClosed, lockActive;MainsChargingState, ChargingError, bool:1, bool:1, bool:1, bool: 1;state, error reason, T/F, T/F, T/F, T/F;;1;1;1;State of the charge controller and possible error reasons;ChC;;;1;;1;
503;ChC_Ch1ConnState;periodFlag, nMsgs, nRecv;uint8_t, uint8_t, uint8_t;-, -, -;;1;1;1;Flag for request/response periods, number of messages sent to charger 1, number of messages received for each charger;ChC;;;;;1;
504;ChC_Ch2ConnState;periodFlag, nMsgs, nRecv;uint8_t, uint8_t, uint8_t;-, -, -;;1;1;1;Flag for request/response periods, number of messages sent to charger 2, number of messages received for each charger;ChC;;;;;1;
505;ChC_Ch3ConnState;periodFlag, nMsgs, nRecv;uint8_t, uint8_t, uint8_t;-, -, -;;1;1;1;Flag for request/response periods, number of messages sent to charger 3, number of messages received for each charger;ChC;;;;;1;
506;ChC_ChargersState;ch1OK, ch2OK, ch3OK, ch1Alive, ch2Alive, ch3Alive, pad, ch1HiTemp, ch1OPOff, ch1ACFail, ch1Short, ch1OLP, ch1OVP, ch1OTP, ch1FanFail, ch2HiTemp, ch2OPOff, ch2ACFail, ch2Short, ch2OLP, ch2OVP, ch2OTP, ch2FanFail, ch3HiTemp, ch3OPOff, ch3ACFail, ch3Short, ch3OLP, ch3OVP, ch3OTP, ch3FanFail;bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, uint8_t, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1;T/F, T/F, T/F, T/F, T/F, T/F, -, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F;;1;1;1;State of the MW3200 chargers connected to the ChC;ChC;FUC;;;;1;
507;ChC_MaxChargingCurrents;currentInMax, currentOutMax;float, float;A, A;;1;1;1;Maximum input and output current of the ChC;ChC;;;;;1;
508;ChC_ChargerSetpoint;current, voltage;float, float;A, V;;1;1;1;Setpoint (I_OUT, V_OUT) that is written to the chargers;ChC;;;;;1;
509;ChC_BusMeasurement;voltage, current;float, float;V, A;;1;1;1;Voltage and current measured at the bus side of the chargers;ChC;BoC;;0, 1;;1;
510;ChC_ValidatedPVCurrent;current, method;float, PVCurrentMethod;A, method;;1;1;1;PV current used by the ChC and the method by which it was obtained;ChC;;;;;1;
511;ChC_InputCurrent;current;float;A;;1;1;1;RMS current measured at the input of the charger;ChC;;;;;1;
512;ChC_InputVoltage;voltage;float;V;;1;1;1;Voltage measured at the input of the charger;ChC;;;;;1;
515;ChC_PIControllerState;e, integral;float, float;A, A.s;;1;1;1;State of the PI controller on the ChC;ChC;;;;;1;
517;ChC_ControllerSetting;targetCurrent, limitingFactor, eta, enabled;float, ChCLimitingFactor, uint8_t, bool:1;A, Factor, %, T/F;;1;1;1;Target current and limiting factor of the BMS;ChC;;;;;1;
518;ChC_ChargerOutputVoltages;ch1Voltage, ch2Voltage, ch3Voltage;uint16_t, uint16_t, uint16_t;dV, dV, dV;;1;1;1;Output voltages of the separate chargers connected to the ChC;ChC;;;0, 1, 2;;1;
519;ChC_ChargerOutputCurrents;ch1Current, ch2Current, ch3Current;uint16_t, uint16_t, uint16_t;dA, dA, dA;;1;1;1;Output currents of the separate chargers connected to the ChC;ChC;;;0, 1, 2;;1;
520;ChC_ProtocolState;state, current, hasProximity;SAEJ1772State, SAEJ1772Current, bool;state, current, T/F;;1;1;1;State of the SAE J1772 protocol connection on the ChC;ChC;;;;;1;
521;ChC_ProtocolMeasurement;cpDutyCycle, ppVoltage;float, float;%, V;;1;1;1;Measurements of the charging port analog values;ChC;;;;;1;
522;ChC_ChargingControlState;state, dualChargerSubState, tripleChargerSubState;ChargingState, DualChargerStrategySubState, TripleChargerStrategySubState;state, state, state;;1;1;1;State of the ChC charging control;ChC;;;;;1;
523;ChC_ProtocolAmpacity;ampacity;float;A;;1;1;1;Ampacity according to the SAE J1772 protocol in case where the ampacity is equation-based;ChC;;;;;1;
524;ChC_ChargerTemperatures;ch1Temperature, ch2Temperature, ch3Temperature;int16_t, int16_t, int16_t;ddegC, ddegC, ddegC;;1;1;1;Charger temperatures;ChC;;;;;1;
528;ChC_CurrentCounter;wh, as;int32_t, int32_t;Wh, As;;1;1;1;Current counter of the ChC since last start;ChC;;;0, 1;;5;
550;ChC_DARE_ProtocolSetpoint;state, current;SAEJ1772State, SAEJ1772Current;state, current;;1;1;1;Debugging setpoint of the ChC;ChC DARE setpoint;ChC;;;;0;
600;FUC_Version;swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;#, #, #, #, #, #;;1;1;1;FUC version message;FUC;;;;;1;
601;FUC_Keepalive;lvcAlive, bmsAlive, acuAlive, pvcAlive, chcAlive, ssbAlive, rauxAlive, bbAlive, mk5Alive, pscbAlive;bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1, bool: 1;T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F;;1;1;1;FUC keepalive message;FUC;;;;;1;
602;FUC_PrimaryDisplayMode;mode;PrimaryDisplayMode;state;;1;1;1;The mode of the primary display;FUC;BoC;;;;1;
603;FUC_Input;heater, fan, dss, leftDoorOpen, rightDoorOpen;bool:1, bool:1, bool: 1, bool: 1, bool: 1;On/Off, On/Off, On/Off, T/F, T/F;;1;1;1;The state of the physical inputs present on the FUC;FUC;SSB;;;;1;
604;FUC_Telltales;leftIndicatorBroken, rightIndicatorBroken, leftLowBeamBroken, rightLowBeamBroken;bool: 1, bool: 1, bool: 1, bool: 1;T/F, T/F, T/F, T/F;;1;1;1;Whether the lights on the FUC are broken;FUC;;;;;1;
605;FUC_CMSState;state;CMSState;state;;1;1;1;The state of the CMS according to the FUC;FUC;;;;;1;
606;FUC_CMSRightError;error;CMSError;error;;1;1;1;Error of the left CMS screen and camera;FUC;;;;;1;
607;FUC_EnableExternalCharging;enable;uint8_t;T/F;;1;1;1;Whether external charging should be enabled upon exiting Drive state;FUC;;;;;1;
608;FUC_SyncTimer;timer;uint64_t;us;;1;1;1;Sync timer for the FUC;FUC;;;;;1;
609;FUC_LogFlag;flag;bool;-;;1;1;1;Log flag for the FUC;FUC;;;;;1;
620;FUC_DemoTurnOn;turnOn;bool;T/F;;1;1;1;Enables the demo turn-on sequence for during the car presentation;;FUC;;;;1;
641;SAC_TxPDO1;actualCurrent, actualTorque;int32_t, int16_t;-, -;;1;1;1;Actual torque and current of the Steering Actuator;SAC;ACU;;;;0;
642;BAC_TxPDO1;actualCurrent, actualTorque;int32_t, int16_t;-, -;;1;1;1;Actual torque and current of the Braking Actuator;BAC;ACU;;;;0;
643;MPPT1_VoltageOutAndPowerIn;voltageOut, powerIn;float, float;V, mW;;1;1;1;MPPT 1 voltage OUT and power IN;MPPT1;PvC;;0, 1;;1;
644;MPPT2_VoltageOutAndPowerIn;voltageOut, powerIn;float, float;V, mW;;1;1;1;MPPT 2 voltage OUT and power IN;MPPT2;PvC;;0, 1;;1;
645;MPPT3_VoltageOutAndPowerIn;voltageOut, powerIn;float, float;V, mW;;1;1;1;MPPT 3 voltage OUT and power IN;MPPT3;PvC;;0, 1;;1;
700;SSB_Version;swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;#, #, #, #, #, #;;1;1;1;SSB version message;SSB;;;;;1;
701;SSB_WiperSpeed;speed, squirt;WiperSpeed, bool;wiper speed, T/F;;1;1;1;Speed of the wiper and whether to active the washer pump;SSB;FUC;;;;1;
702;SSB_CruiseControl;setpoint, enable;float, bool;m/s, T/F;;1;1;1;Whether to enable cruise control and the setpoint;SSB;ACU;;;;1;
703;SSB_Honk;enable;bool: 1;On/Off;;1;1;1;State of the honk according to the SSB;SSB;FUC;;;;1;
704;SSB_WSCButtons;enableRegen, brightenScreen, enableRearCamera;bool: 1, bool: 1, bool: 1;T/F, T/F, T/F;;1;1;1;Toggling of WSC-specific functions according to the SSB;SSB;ACU, PsCB, RAUX;;;;1;
750;RAUX_Keepalive;acuAlive, ssbAlive;bool:1, bool:1;T/F, T/F;;1;1;1;Keepalive of the RAUX;RAUX;;;;;1;
751;RAUX_Version;swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;#, #, #, #, #, #;;1;1;1;RAUX version message;RAUX;;;;;1;
752;RAUX_LightsStatus;rearLightBroken, rearLeftIndicatorBroken, rearRightIndicatorBroken, rearFogLightBroken;bool: 1, bool: 1, bool: 1, bool: 1;T/F, T/F, T/F, T/F;;1;1;1;Status of the lights connected to the RAUX;RAUX;;;;;1;
769;InvL_Status_TritiumWS22;outputVoltagePWM, motorCurrent, velocity, busCurrent, bVUL, bVLL, ipmMotorTemp, reserved2, reserved, softwareOCError, dCBusOVError, badMotorPositionError, watchdogReset, configReadError, _15VVoltageLockOutError, uVLOdesaturationFault, motorOverSpeedError, reserved3, activeMotor, transmitErrCount, receiveErrCount;bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, uint8_t, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, uint8_t, uint16_t, uint8_t, uint8_t;N/A, t/f, t/f, t/f, t/f, t/f, t/f, t/f, N/A, t/f, t/f, t/f, t/f, t/f, t/f, t/f, t/f, N/A, nr, nr, nr;;1;1;1;Inverter status information (Tritium WS22 spec);ACU, InvL;ACU, MK5;;;;1;
770;InvL_BusMeasurement_TritiumWS22;voltage, current;float, float;V, A;;1;1;1;Inverter bus measurement;InvL, ACU;ACU, MK5;;;;1;
771;InvL_VelocityMeasurement_TritiumWS22;motorVelocity, vehicleVelocity;float, float;RPM, m/s;;1;1;1;Inverter velocity measurement;InvL, ACU;ACU, MK5;;;;1;
800;BB_DSSState;state;DSSState;State;;1;1;1;State of the autonomous system;BB;FUC;;;;1;
850;AVC_Version;swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;#, #, #, #, #, #;;1;1;1;AVC version message;AVC;;;;;1;
851;AVC_Keepalive;avcAlive;bool: 1;T/F;;1;1;1;Keepalive of the AVC;AVC;;;;;1;
852;AVC_State;state;AVCState;state;;1;1;1;State of the AVC;AVC;;;;;1;
853;AVC_DiagnosticGeneral;manualOverrideEnabled, fanEnabled;bool: 1, bool: 1;T/F, T/F;;1;1;1;AVC general diagnostic information;AVC;;;;;1;
854;AVC_DiagnosticTemp;NTCTemp1, NTCTemp2;float, float;Centigrade, Centigrade;;1;1;1;AVC diagnostic information of temperatures;AVC;;;;;1;
855;AVC_DiagnosticEE;converterVoltage, converterCurrent;float, float;Volt, Ampere;;1;1;1;AVC diagnostic information of electronics;AVC;;;;;1;
856;AVC_Servicing;disableConverter;bool: 1;T/F;;1;1;1;Message to manually disabled the converters of the AVC;AVC;;;;;1;
897;SAC_TxPDO2;statusWord, opMode;uint16_t, EPOS4OpMode;status word, opmode;;1;1;1;Status word and operation mode of the Steering Actuator Controller;SAC;ACU;;;;0;
898;BAC_TxPDO2;statusWord, opMode;uint16_t, EPOS4OpMode;status word, opmode;;1;1;1;Status word and operation mode of the Braking Actuator Controller;BAC;ACU;;;;0;
903;MK5_17Compat_ACUOverrule;dnr, overruleDNR, throtSensor1On, throtSensor2On, brakeSensor1On, brakeSensor2On, inverterLOn, inverterROn, regenBrakingOn;DNR, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1;RND, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F;;1;1;1;MK5 ACU overrule message (here for MCU '17 compatibility);MK5;ACU;;;;1;
1000;BoC_Request_PrimaryDisplayMode;requestState;PrimaryDisplayMode;state;;1;1;1;When HVI wants to request the primary screen to switch to a mode;BoC;FUC;;;;1;
1001;BoC_Request_Regenerative;enable;bool : 1;T/F;;1;1;1;When HVI wants to request enabling / disabling regenerative braking;BoC;ACU;;;;1;
1002;BoC_Request_Autonomy_Sensing;enable;bool: 1;T/F;;1;1;1;When HVI wants to request the LVC to turn on the Bluebox;BoC;LVC;;;;1;
1003;BoC_Request_Honk;placeHolder;uint8_t;placeHolder;;1;1;1;When the honk command is sent from the mobile app;BoC;FUC;;;;1;
1004;BoC_Request_VehicleState;requestState;VehicleState;state;;1;1;1;When HVI wants to request the LVC to switch to a vehicle state;BoC;LVC;;;;1;
1041;IVT_Msg_Command;commandByte, db1, db2, db3, db4, db5, db6, db7;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;-, -, -, -, -, -, -, -;;1;1;1;According to IVT datasheet;BMS;IVT;;;;1;
1050;PsCB_Version;swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;#, #, #, #, #, #;;1;1;1;PsCB version message;PsCB;;;;;1;
1051;PsCB_Keepalive;lvcAlive, bmsAlive, acuAlive, pvcAlive, chcAlive, ssbAlive, fucAlive, rauxAlive, bbAlive, mk5Alive;bool:1, bool:1, bool:1, bool:1, bool:1, bool:1, bool:1, bool:1, bool:1, bool:1;T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F, T/F;;1;1;1;Keepalive message of the PsCB, containing whether it considers other controllers to be alive or not;PsCB;;;;;1;
1052;PsCB_CMSLeftError;error;CMSError;error;;1;1;1;Error of the left CMS screen and camera;PsCB;;;;;1;
1060;ESB_Version;swMajor, swMinor, eslibMajor, eslibMinor, cliMajor, cliMinor;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;#, #, #, #, #, #;;1;1;1;ESB version message;ESB;;;;;1;
1061;ESB_SliderPosition;position;float;0-1;;1;1;1;Position of the energy slider;ESB;;;;;1;
1080;BMS_Sat1_MetaCellVoltages1;cell1, cell2, cell3, cell4;uint16_t, uint16_t, uint16_t, uint16_t;mV, mV, mV, mV;;1;1;1;MetaCell voltages for satellite 1, cells 1 to 4;BMS;;;;;1;
1081;BMS_Sat1_MetaCellVoltages2;cell5, cell6, cell7, cell8;uint16_t, uint16_t, uint16_t, uint16_t;mV, mV, mV, mV;;1;1;1;MetaCell voltages for satellite 1, cells 5 to 8;BMS;;;;;1;
1082;BMS_Sat1_MetaCellVoltages3;cell9, cell10, cell11, cell12;uint16_t, uint16_t, uint16_t, uint16_t;mV, mV, mV, mV;;1;1;1;MetaCell voltages for satellite 1, cells 9 to 12;BMS;;;;;1;
1083;BMS_Sat2_MetaCellVoltages1;cell1, cell2, cell3, cell4;uint16_t, uint16_t, uint16_t, uint16_t;mV, mV, mV, mV;;1;1;1;MetaCell voltages for satellite 2, cells 1 to 4;BMS;;;;;1;
1084;BMS_Sat2_MetaCellVoltages2;cell5, cell6, cell7, cell8;uint16_t, uint16_t, uint16_t, uint16_t;mV, mV, mV, mV;;1;1;1;MetaCell voltages for satellite 2, cells 5 to 8;BMS;;;;;1;
1085;BMS_Sat2_MetaCellVoltages3;cell9, cell10, cell11, cell12;uint16_t, uint16_t, uint16_t, uint16_t;mV, mV, mV, mV;;1;1;1;MetaCell voltages for satellite 2, cells 9 to 12;BMS;;;;;1;
1086;BMS_Sat3_MetaCellVoltages1;cell1, cell2, cell3, cell4;uint16_t, uint16_t, uint16_t, uint16_t;mV, mV, mV, mV;;1;1;1;MetaCell voltages for satellite 3, cells 1 to 4;BMS;;;;;1;
1087;BMS_Sat3_MetaCellVoltages2;cell5, cell6, cell7, cell8;uint16_t, uint16_t, uint16_t, uint16_t;mV, mV, mV, mV;;1;1;1;MetaCell voltages for satellite 3, cells 5 to 8;BMS;;;;;1;
1088;BMS_Sat3_MetaCellVoltages3;cell9, cell10, cell11, cell12;uint16_t, uint16_t, uint16_t, uint16_t;mV, mV, mV, mV;;1;1;1;MetaCell voltages for satellite 3, cells 9 to 12;BMS;;;;;1;
1089;BMS_Sat1_Temperatures;chan1, chan2, chan3, chan4, chan5, chan6;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;°C, °C, °C, °C, °C, °C;;1;1;1;BMS satellite 1 temperature;BMS;;;;;1;
1090;BMS_Sat2_Temperatures;chan1, chan2, chan3, chan4, chan5, chan6;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;°C, °C, °C, °C, °C, °C;;1;1;1;BMS satellite 2 temperature;BMS;;;;;1;
1091;BMS_Sat3_Temperatures;chan1, chan2, chan3, chan4, chan5, chan6;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;°C, °C, °C, °C, °C, °C;;1;1;1;BMS satellite 3 temperature;BMS;;;;;1;
1100;MK5_GPS;lat, lon;float, float;decimal degrees, decimal degrees;;1;1;1;Last known GPS coördinates of the MK5;MK5;;;0, 1;;1;
1101;MK5_GPSMetaData;speed, heading;float, float;m/s, centidegrees;;1;1;1;Additional GPS data of speed and degrees from north;MK5;;;0;;1;
1102;MK5_Strat_GPS;lat, lon;float, float;decimal degrees, decimal degrees;;1;1;1;Last known GPS coördinates of the MK5;MK5;;;;;1;
1103;MK5_Strat_GPSMetaData;speed, heading;float, float;m/s, centidegrees;;1;1;1;Additional GPS data of speed and degrees from north;MK5;;;;;1;
1104;MK5_Tech_GPS;lat, lon;float, float;decimal degrees, decimal degrees;;1;1;1;Last known GPS coördinates of the MK5;MK5;;;;;1;
1105;MK5_Tech_GPSMetaData;speed, heading;float, float;m/s, centidegrees;;1;1;1;Additional GPS data of speed and degrees from north;MK5;;;;;1;
1106;MK5_GPSTimeStamp;timestamp;uint64_t;mSec since Epoch;;1;1;1;Additional GPS timestamp;MK5;;;0;;1;
1110;BMS_ServicingParams;overrideAcc, overrideHVIL, overrideIMD, overrideOvercurrent, resetSoC100;bool, bool, bool, bool, bool;T/F, T/F, T/F, T/F, T/F;;1;1;1;Parameters for disabling certain processes in the system during servicing or testing;;BMS;;;;1;
1111;Srv_BMS_BalancingControl;enableBalancing;bool;T/F;;1;1;1;Controls balancing on the BMS;Servicing;BMS;;;;1;
1130;Srv_CruiseControlOverride;setpoint, enable;float, bool;m/s, T/F;;1;1;1;Allows for overriding the Cruise Control over CAN;;ACU;;;;1;
1131;Srv_RegenOverride;enablePedalRegen;bool: 1;T/F;;1;1;1;Override flags for regenerative braking;ACU servicing;ACU;;;;1;
1185;InvL_Status_NLELocomoco;_unused1, internalOverTemperature, motorOverTemperature, overcurrent, undercurrent, overvoltage, undervoltage, _undefinedErrorBits, unused2, unused3, txErrCount, rxErrCount;uint16_t, bool:1, bool:1, bool:1, bool:1, bool:1, bool:1, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t;-, -, -, -, -, -, -, -, -, -, -, -;;1;1;1;Inverter status information;InvR;ACU;;;;1;
1186;InvL_BusMeasurement_NLELocomoco;voltage, current;float, float;V, A;;1;1;1;Inverter bus measurement;InvL, ACU;ACU, MK5;0, 1;0, 1;;1;
1187;InvL_VelocityMeasurement_NLELocomoco;motorVelocity, vehicleVelocity;float, float;RPM, m/s;;1;1;1;Inverter velocity measurement;InvL, ACU;ACU, MK5;0, 1;0, 1;;1;
1195;InvL_TemperatureMeasurement_NLELocomoco;motorTemperature, heatsinkTemperature;float, float;deg C, deg C;;1;1;1;Inverter temperature measurement;InvL;ACU;;0, 1;;1;
1217;InvR_Status_NLELocomoco;_unused1, internalOverTemperature, motorOverTemperature, overcurrent, undercurrent, overvoltage, undervoltage, _undefinedErrorBits, unused2, unused3, txErrCount, rxErrCount;uint16_t, bool:1, bool:1, bool:1, bool:1, bool:1, bool:1, uint8_t, uint8_t, uint16_t, uint8_t, uint8_t;-, -, -, -, -, -, -, -, -, -, -, -;;1;1;1;Inverter status information;InvR;ACU;;;;1;
1218;InvR_BusMeasurement_NLELocomoco;voltage, current;float, float;V, A;;1;1;1;Inverter bus measurement;InvR, ACU;ACU, MK5;0, 1;0, 1;;1;
1219;InvR_VelocityMeasurement_NLELocomoco;motorVelocity, vehicleVelocity;float, float;RPM, m/s;;1;1;1;Inverter velocity measurement;InvR, ACU;ACU, MK5;0, 1;0, 1;;1;
1227;InvR_TemperatureMeasurement_NLELocomoco;motorTemperature, heatsinkTemperature;float, float;deg C, deg C;;1;1;1;Inverter temperature measurement;InvL;ACU;;0, 1;;1;
1152;InvR_DriveCommand_NLELocomoco;velocity, current;float, float;RPM, [0..1];;1;1;1;Inverter drive command;ACU;InvR;;;;1;
1153;InvR_Status_TritiumWS22;outputVoltagePWM, motorCurrent, velocity, busCurrent, bVUL, bVLL, ipmMotorTemp, reserved2, reserved, softwareOCError, dCBusOVError, badMotorPositionError, watchdogReset, configReadError, _15VVoltageLockOutError, uVLOdesaturationFault, motorOverSpeedError, reserved3, activeMotor, transmitErrCount, receiveErrCount;bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, uint8_t, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, bool : 1, uint8_t, uint16_t, uint8_t, uint8_t;N/A, t/f, t/f, t/f, t/f, t/f, t/f, t/f, N/A, t/f, t/f, t/f, t/f, t/f, t/f, t/f, t/f, N/A, nr, nr, nr;;1;1;1;Inverter status information (Tritium WS22 spec);ACU, InvL;ACU, MK5;;;;1;
1154;InvR_BusMeasurement_TritiumWS22;voltage, current;float, float;V, A;;1;1;1;Inverter bus measurement;InvR;ACU;;;;1;
1155;InvR_VelocityMeasurement_TritiumWS22;motorVelocity, vehicleVelocity;float, float;RPM, m/s;;1;1;1;Inverter velocity measurement;InvR;ACU;;;;1;
1120;InvL_DriveCommand_NLELocomoco;velocity, current;float, float;RPM, [0..1];;1;1;1;Inverter drive command;ACU;InvL;;;;1;
1281;InvL_DriveCommand_TritiumWS22;velocity, current;float, float;RPM, [0..1];;1;1;1;Inverter drive command;ACU;InvL;;;;1;
1297;IVT_Response;data;uint64_t;-;;1;1;1;IVT data;IVT;;;;;1;
1298;IVT_ResponseEcho;data;uint64_t;-;;1;1;1;IVT data echo dit is papa alfa hotel;BMS;;;;;1;
1313;IVT_Msg_Result_I;MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_I;int8_t, int8_t, int32_t;-, -, mA;;1;1;1;Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  I Result as signed long ;IVT;BMS;;;;1;
1314;IVT_Msg_Result_U1;MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_U1;int8_t, int8_t, int32_t;-, -, mV;;1;1;1;Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  U1 Result as signed long ;IVT;BMS;;;;1;
1315;IVT_Msg_Result_U2;MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_U2;int8_t, int8_t, int32_t;-, -, mV;;1;1;1;Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  U2 Result as signed long ;IVT;BMS;;;;1;
1316;IVT_Msg_Result_U3;MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_U3;int8_t, int8_t, int32_t;-, -, mV;;1;1;1;Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  U3 Result as signed long ;IVT;BMS;;;;1;
1317;IVT_Msg_Result_T;MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_T;int8_t, int8_t, int32_t;-, -, 0.1°C;;1;1;1;Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  T Result as signed long ;IVT;BMS;;;;1;
1318;IVT_Msg_Result_W;MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_W;int8_t, int8_t, int32_t;-, -, W;;1;1;1;Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  P Result as signed long ;IVT;BMS;;;;1;
1319;IVT_Msg_Result_As;MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_As;int8_t, int8_t, int32_t;-, -, As;;1;1;1;Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  Q Result as signed long ;IVT;BMS;;2;;1;
1320;IVT_Msg_Result_Wh;MuxID, IVT_Result_StateIVT_MsgCount, IVT_Msg_Result_Wh;int8_t, int8_t, int32_t;-, -, Wh;;1;1;1;Mux: n = channel number, Cyclic counter individually for each channel, IVT__Result_state 0b0000 .. 0b1111,  E Result as signed long ;IVT;BMS;;2;;1;
1409;SAC_TxSDO;command, index, subIndex, data;CANOpenSDOCommand, uint16_t, uint8_t, uint32_t;-, -, -, -;;1;1;1;TxSDO for the Braking Actuator;BAC;ACU;;;;0;
1410;BAC_TxSDO;command, index, subIndex, data;CANOpenSDOCommand, uint16_t, uint8_t, uint32_t;-, -, -, -;;1;1;1;TxSDO for the Steering Actuator;SAC;ACU;;;;0;
1552;CMS_Message;a, b, c, d, e, f, g, h;uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t;-, -, -, -, -, -, -, -;;1;1;1;CMS data;CMS;FUC;;;;1;
1793;SAC_Heartbeat;data;CANOpenHeartbeatData;heartbeat data;;1;1;1;CANopen heartbeat of the steering actuator;SAC;ACU;;;;0;
1794;BAC_Heartbeat;data;CANOpenHeartbeatData;heartbeat data;;1;1;1;CANopen heartbeat of the braking actuator;BAC;ACU;;;;0;
